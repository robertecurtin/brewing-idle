{"version":3,"sources":["ResourceBar.js","Upgrade.js","ResourceManager.js","Button.js","config/Upgrades.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["ResourceBar","props","Container","Col","dollars","beer","Upgrade","useState","purchased","setPurchased","Card","style","width","border","isPurchasable","bg","onClick","callback","Header","name","Body","Text","text","title","_value","value","setValue","addFunctions","setAddFunctions","add","v","f","subtract","getValue","getIncrementValue","registerAddFunction","push","isVisible","Button","variant","disabled","Upgrades","costs","beerManager","cashManager","payCosts","cash","multiplyCashGainBy","c","Row","b","Game","ResourceManager","className","App","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4e839d5e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction ResourceBar(props) {\n  return <Container>\n    <Col>Cash: ${props.dollars}</Col>\n    <Col>Beer: {props.beer} bottles</Col>\n  </Container>\n}\n\nexport default ResourceBar;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Card } from 'react-bootstrap';\n\nfunction Upgrade(props) {\n  const [purchased, setPurchased] = useState(false);\n  return <Card\n    style={{ width: '15rem' }}\n    border={\n      props.isPurchasable() ? 'primary' : 'light'\n    }\n    bg={\n      purchased ? 'info' : 'light'\n    }\n    onClick={() => {\n      if (props.isPurchasable() && !purchased) {\n        setPurchased(true)\n        props.callback()\n      }\n    }\n    }\n  >\n    <Card.Header>{props.name}</Card.Header>\n    <Card.Body>\n      <Card.Text>\n        {props.text}\n      </Card.Text>\n    </Card.Body>\n  </Card>;\n};\n\nexport default Upgrade;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default (title, _value) => {\n  const [value, setValue] = useState(_value)\n  const [addFunctions, setAddFunctions] = useState([])\n  return {\n    add: (v) => {\n      for (let f of addFunctions) {\n        v = f(v)\n      }\n      setValue(value + v)\n    },\n    subtract: (v) => {\n      setValue(value - v)\n    },\n    getValue: () => {\n      return value\n    },\n    getIncrementValue: () => {\n      let v = 1\n      for (let f of addFunctions) {\n        v = f(v)\n      }\n      return v\n    },\n    registerAddFunction: (f) => {\n      addFunctions.push(f)\n      setAddFunctions(addFunctions)\n    }\n  }\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'react-bootstrap';\n\nexport default (props) => {\n  const isPurchasable = props.isPurchasable()\n  if (props.isVisible()) {\n    return <Button\n      variant='primary'\n      onClick={() => {\n        if (isPurchasable) {\n          props.callback()\n        }\n      }\n      }\n      disabled={!isPurchasable}\n    >\n      {props.text}\n    </Button>\n  }\n  else {\n    return <div />\n  }\n};\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport Upgrade from '../Upgrade'\n\nfunction Upgrades(props) {\n  const beerManager = props.beerManager\n  const cashManager = props.cashManager\n\n  const payCosts = (costs) => {\n    if(costs.cash) {\n      cashManager.subtract(costs.cash)\n    }\n    if(costs.beer) {\n      beerManager.subtract(costs.beer)\n    }\n  }\n\n  const multiplyCashGainBy = (v, costs) => () => {\n    cashManager.registerAddFunction((c) => 2 * c)\n    payCosts(costs)\n  }\n\n  const multiplyBeerGainBy = (v, costs) => () => {\n    beerManager.registerAddFunction((b) => 6 * b)\n    payCosts(costs)\n  }\n\n  return <Container>\n    <Row>\n      <Col>\n        <Upgrade\n          isPurchasable={() => beerManager.getValue() >= 12}\n          name={'Get a raise'}\n          text={'Doubles cash gained'}\n          callback={multiplyCashGainBy(2, { beer: 5 })}\n        />\n      </Col>\n      <Col>\n        <Upgrade\n          isPurchasable={() => beerManager.getValue() >= 12}\n          name={'Get a raise'}\n          text={'Doubles cash gained'}\n          callback={multiplyCashGainBy(2, { beer: 12 })}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Upgrade\n          isPurchasable={() => beerManager.getValue() >= 6}\n          name={'Six-pack'}\n          text={'Multiplies beer gained by 6'}\n          callback={multiplyBeerGainBy(6, { beer: 6 })}\n        />\n      </Col>\n    </Row>\n  </Container>\n};\n\nexport default Upgrades;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Row } from 'react-bootstrap';\nimport ResourceBar from './ResourceBar'\nimport Upgrade from './Upgrade'\nimport ResourceManager from './ResourceManager'\nimport Button from './Button'\nimport Upgrades from './config/Upgrades'\n\nfunction Game() {\n    const cashManager = ResourceManager('cash', 10)\n    const beerManager = ResourceManager('beer', 11)\n    return <div className='Game'>\n        <Container>\n            <Row>\n                <ResourceBar dollars={cashManager.getValue()} beer={beerManager.getValue()} />\n            </Row>\n            <Row>\n                <Button text={'Get ' + cashManager.getIncrementValue() + ' dollars'} isPurchasable={() => true} isVisible={() => true} callback={\n                    () => {\n                        cashManager.add(1)\n                    }\n                } />\n\n                <Button text={'Buy ' + beerManager.getIncrementValue() + ' beers'} isPurchasable={() => cashManager.getValue() >= 10} isVisible={() => true} callback={\n                    () => {\n                        beerManager.add(1)\n                        cashManager.subtract(10)\n                    }\n                } />\n            </Row>\n\n            <Row>\n                <Upgrades\n                beerManager={beerManager}\n                cashManager={cashManager}\n                />\n            </Row>\n        </Container>\n    </div>\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './Game';\n\nclass App extends Component {\n  render () {\n    return <div className='App'>\n      <Game> </Game>\n    </div>;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}